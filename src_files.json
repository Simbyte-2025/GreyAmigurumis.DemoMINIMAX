[
  {
    "path": "src/App.css",
    "content": "/* Estilos específicos para Gray Amigurumis */\n\n/* Mejoras de rendimiento */\n* {\n  box-sizing: border-box;\n}\n\n#root {\n  margin: 0;\n  min-height: 100vh;\n}\n\n/* Smooth scrolling mejorado */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Utilidades personalizadas */\n.glass-effect {\n  backdrop-filter: blur(16px);\n  -webkit-backdrop-filter: blur(16px);\n}\n\n/* Mejoras de accesibilidad */\n@media (prefers-reduced-motion: reduce) {\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/* Optimización de imágenes */\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Mejoras de focus para accesibilidad */\nbutton:focus-visible,\na:focus-visible,\ninput:focus-visible,\ntextarea:focus-visible {\n  outline: 2px solid hsl(var(--primary));\n  outline-offset: 2px;\n}\n\n/* Carga de fuentes optimizada */\n@media (prefers-reduced-data: reduce) {\n  .font-display,\n  .font-sans {\n    font-family: system-ui, -apple-system, sans-serif;\n  }\n}"
  },
  {
    "path": "src/App.tsx",
    "content": "import React, { useRef, useEffect } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport About from './components/About';\nimport Catalog from './components/Catalog';\nimport IdeaGenerator from './components/IdeaGenerator';\nimport Testimonials from './components/Testimonials';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  const sectionsRef = useRef<{ [key: string]: HTMLElement | null }>({});\n\n  // Función para hacer scroll suave a una sección específica\n  const scrollToSection = (sectionId: string) => {\n    const section = sectionsRef.current[sectionId];\n    if (section) {\n      const headerOffset = 80; // Altura del header fijo\n      const elementPosition = section.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Observer para detectar las secciones que están en vista\n  useEffect(() => {\n    const observerOptions = {\n      root: null,\n      rootMargin: '-50% 0px -50% 0px',\n      threshold: 0\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          // Aquí podrías agregar lógica para actualizar la navegación activa\n          console.log('Vista activa:', entry.target.id);\n        }\n      });\n    }, observerOptions);\n\n    // Observar todas las secciones\n    Object.values(sectionsRef.current).forEach((section) => {\n      if (section) {\n        observer.observe(section);\n      }\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  // Configurar las referencias de las secciones\n  const setSectionRef = (sectionId: string) => (el: HTMLElement | null) => {\n    sectionsRef.current[sectionId] = el;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <Header scrollToSection={scrollToSection} />\n\n      {/* Contenido Principal */}\n      <ErrorBoundary>\n        <main>\n          {/* Hero Section */}\n          <div ref={setSectionRef('inicio')}>\n            <Hero scrollToSection={scrollToSection} />\n          </div>\n\n          {/* About Section */}\n          <div ref={setSectionRef('nosotros')}>\n            <About />\n          </div>\n\n          {/* Catalog Section */}\n          <div ref={setSectionRef('tienda')}>\n            <Catalog />\n          </div>\n\n          {/* Idea Generator Section */}\n          <section id=\"generador\">\n            <IdeaGenerator />\n          </section>\n\n          {/* Testimonials Section */}\n          <section id=\"testimonios\">\n            <Testimonials />\n          </section>\n        </main>\n\n        {/* Footer */}\n        <div ref={setSectionRef('contacto')}>\n          <Footer scrollToSection={scrollToSection} />\n        </div>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\n// Componente Error Boundary simple\nclass ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean; error?: Error }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Error capturado por Error Boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"fixed inset-0 bg-background flex items-center justify-center z-50\">\n          <div className=\"glass-effect rounded-2xl p-8 max-w-md mx-4 text-center\">\n            <h2 className=\"font-display text-2xl font-bold text-primary mb-4\">\n              ¡Ups! Algo salió mal\n            </h2>\n            <p className=\"text-foreground/80 mb-6\">\n              Ha ocurrido un error inesperado. Por favor, recarga la página.\n            </p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"bg-primary hover:bg-primary/90 text-primary-foreground font-semibold px-6 py-3 rounded-lg transition-colors\"\n            >\n              Recargar página\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default App;"
  },
  {
    "path": "src/index.css",
    "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --radius: 0.5rem;\n    \n    /* Paleta \"Pastel Dreams\" - variables CSS */\n    --background: 35 30% 98%; /* Crema cálido */\n    --foreground: 348 25% 40%; /* Marrón principal */\n    \n    --primary: 354 100% 85%; /* Rosa pastel */\n    --primary-foreground: 348 25% 40%;\n    \n    --secondary: 210 100% 85%; /* Celeste suave */\n    --secondary-foreground: 210 50% 35%;\n    \n    --accent: 45 100% 85%; /* Amarillo suave */\n    --accent-foreground: 45 30% 45%;\n    \n    --muted: 35 30% 98%; /* Crema cálido */\n    --muted-foreground: 348 25% 60%;\n    \n    --card: 0 0% 100%;\n    --card-foreground: 348 25% 40%;\n    \n    --popover: 0 0% 100%;\n    --popover-foreground: 348 25% 40%;\n    \n    --border: 348 20% 90%;\n    --input: 348 20% 90%;\n    --ring: 354 100% 85%;\n    \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 20% 98%;\n  }\n\n  * {\n    border-color: hsl(var(--border));\n  }\n\n  body {\n    background-color: hsl(var(--background));\n    color: hsl(var(--foreground));\n    font-family: 'Quicksand', sans-serif;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer components {\n  .glass-effect {\n    @apply backdrop-blur-md bg-white/80 border border-white/20 shadow-lg;\n  }\n  \n  .gradient-pastel {\n    background: linear-gradient(135deg, #FFB3BA 0%, #B3D9FF 50%, #FFE5B3 100%);\n  }\n  \n  .text-gradient {\n    @apply bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent;\n  }\n}\n\n\n\nimg {\n  object-position: top;\n}\n\n.fixed {\n  position: fixed;\n}"
  },
  {
    "path": "src/main.tsx",
    "content": "import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { ErrorBoundary } from './components/ErrorBoundary.tsx'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </StrictMode>,\n)\n"
  },
  {
    "path": "src/vite-env.d.ts",
    "content": "/// <reference types=\"vite/client\" />\n"
  },
  {
    "path": "src/components/About.tsx",
    "content": "import { motion } from 'framer-motion';\nimport { Heart, Star, Gift } from 'lucide-react';\n\nconst About: React.FC = () => {\n  const features = [\n    {\n      icon: Heart,\n      title: \"Hecho con Amor\",\n      description: \"Cada puntada está tejida con dedicación y cariño, convirtiendo cada muñeco en una pieza única llena de ternura.\",\n      color: \"text-primary\"\n    },\n    {\n      icon: Star,\n      title: \"Creaciones Únicas\",\n      description: \"Diseños originales inspirados en personajes favoritos, combinando creatividad con técnicas artesanales de alta calidad.\",\n      color: \"text-secondary\"\n    },\n    {\n      icon: Gift,\n      title: \"Listo para Regalar\",\n      description: \"El regalo perfecto para cualquier ocasión. Nuestros amigurumis son ideales para expresar amor y crear momentos especiales.\",\n      color: \"text-accent\"\n    }\n  ];\n\n  return (\n    <section id=\"nosotros\" className=\"py-20 bg-gradient-to-b from-muted to-background relative overflow-hidden\">\n      {/* Elementos Decorativos de Fondo */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <motion.div\n          animate={{ rotate: 360 }}\n          transition={{ duration: 50, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute -top-20 -right-20 w-40 h-40 bg-primary/10 rounded-full blur-3xl\"\n        />\n        <motion.div\n          animate={{ rotate: -360 }}\n          transition={{ duration: 40, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute -bottom-20 -left-20 w-60 h-60 bg-secondary/10 rounded-full blur-3xl\"\n        />\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Título de Sección */}\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <motion.h2\n            initial={{ opacity: 0, scale: 0.9 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.2, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"font-display text-4xl md:text-5xl font-bold mb-6 text-gradient\"\n          >\n            Nuestra Historia\n          </motion.h2>\n          <motion.div\n            initial={{ width: 0 }}\n            whileInView={{ width: \"100px\" }}\n            transition={{ delay: 0.4, duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"h-1 bg-gradient-to-r from-primary via-secondary to-accent mx-auto rounded-full\"\n          />\n        </motion.div>\n\n        {/* Descripción Principal */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"max-w-4xl mx-auto mb-16\"\n        >\n          <div className=\"glass-effect rounded-3xl p-8 md:p-12\">\n            <p className=\"text-lg md:text-xl text-foreground/90 leading-relaxed text-center\">\n              En <span className=\"font-semibold text-primary\">Gray Amigurumis</span>, cada proyecto nace del deseo de crear \n              algo especial y único. Somos apasionados por el arte del crochet y nos dedicamos a tejer \n              muñecos que no solo sean hermosos, sino que también transmitan la calidez y el amor \n              puestos en cada punto.\n            </p>\n            <br />\n            <p className=\"text-lg md:text-xl text-foreground/90 leading-relaxed text-center\">\n              Desde personajes icónicos de películas y series hasta creaciones originales, cada \n              amigurumi es una oportunidad de hacer realidad tus sueños más tiernos. Trabajamos \n              con materiales de la mejor calidad para asegurar que cada pieza sea duradera y \n              mantenga su belleza por mucho tiempo.\n            </p>\n          </div>\n        </motion.div>\n\n        {/* Cards de Características */}\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <motion.div\n              key={feature.title}\n              initial={{ opacity: 0, y: 50 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 * index, duration: 0.8 }}\n              viewport={{ once: true }}\n              whileHover={{ y: -10, scale: 1.02 }}\n              className=\"group\"\n            >\n              <div className=\"glass-effect rounded-2xl p-8 h-full text-center hover:shadow-xl transition-all duration-300 border border-white/20\">\n                {/* Icono */}\n                <motion.div\n                  whileHover={{ scale: 1.1, rotate: 5 }}\n                  className={`inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-br from-white to-muted shadow-lg mb-6 ${feature.color}`}\n                >\n                  <feature.icon className=\"h-8 w-8\" />\n                </motion.div>\n\n                {/* Título */}\n                <h3 className=\"font-display text-xl font-bold mb-4 text-foreground\">\n                  {feature.title}\n                </h3>\n\n                {/* Descripción */}\n                <p className=\"text-foreground/80 leading-relaxed\">\n                  {feature.description}\n                </p>\n\n                {/* Decoración */}\n                <motion.div\n                  initial={{ scaleX: 0 }}\n                  whileInView={{ scaleX: 1 }}\n                  transition={{ delay: 0.5 + (0.1 * index), duration: 0.8 }}\n                  viewport={{ once: true }}\n                  className=\"mt-6 h-1 w-16 mx-auto bg-gradient-to-r from-primary via-secondary to-accent rounded-full\"\n                />\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Call to Action */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mt-16\"\n        >\n          <div className=\"glass-effect rounded-2xl p-8 inline-block\">\n            <p className=\"text-lg font-medium text-foreground/90 mb-4\">\n              ¿Tienes una idea especial en mente?\n            </p>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => {\n                const message = encodeURIComponent('¡Hola! Me encantaría crear un amigurumi personalizado');\n                window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n              }}\n              className=\"bg-gradient-to-r from-primary to-secondary text-white font-semibold px-8 py-3 rounded-full shadow-lg hover:shadow-xl transition-all duration-300\"\n            >\n              Contáctanos para un pedido personalizado\n            </motion.button>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;"
  },
  {
    "path": "src/components/Catalog.tsx",
    "content": "import { useState, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { products, categories, Product } from '../../public/data/products';\nimport { ShoppingBag, MessageCircle } from 'lucide-react';\n\nconst Catalog: React.FC = () => {\n  const [selectedCategory, setSelectedCategory] = useState('Todos');\n  const [hoveredProduct, setHoveredProduct] = useState<number | null>(null);\n\n  const filteredProducts = useMemo(() => {\n    if (selectedCategory === 'Todos') {\n      return products;\n    }\n    return products.filter(product => product.category === selectedCategory);\n  }, [selectedCategory]);\n\n  const handleWhatsApp = (product: Product) => {\n    const message = encodeURIComponent(`¡Hola! Me interesa el producto: ${product.name} 🧸`);\n    window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n  };\n\n  const handleFlowPurchase = (product: Product) => {\n    window.open(product.flowLink, '_blank');\n  };\n\n  const categoryVariants = {\n    active: {\n      scale: 1.05,\n      backgroundColor: 'rgb(255 179 186)',\n      color: 'rgb(139 90 115)',\n    },\n    inactive: {\n      scale: 1,\n      backgroundColor: 'transparent',\n      color: 'inherit',\n    }\n  };\n\n  const productVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: (index: number) => ({\n      opacity: 1,\n      y: 0,\n      transition: {\n        delay: index * 0.1,\n        duration: 0.5,\n      },\n    }),\n    hover: {\n      y: -5,\n      transition: {\n        duration: 0.2,\n      },\n    },\n  };\n\n  return (\n    <section id=\"tienda\" className=\"py-20 bg-background relative overflow-hidden\">\n      {/* Elementos Decorativos */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <motion.div\n          animate={{ \n            rotate: [0, 360],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{ duration: 20, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute top-20 right-10 w-32 h-32 bg-secondary/5 rounded-full blur-3xl\"\n        />\n        <motion.div\n          animate={{ \n            rotate: [360, 0],\n            scale: [1, 0.9, 1],\n          }}\n          transition={{ duration: 25, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute bottom-20 left-10 w-40 h-40 bg-accent/5 rounded-full blur-3xl\"\n        />\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Título de Sección */}\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <motion.h2\n            initial={{ opacity: 0, scale: 0.9 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.2, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"font-display text-4xl md:text-5xl font-bold mb-6 text-gradient\"\n          >\n            Nuestra Colección\n          </motion.h2>\n          <motion.div\n            initial={{ width: 0 }}\n            whileInView={{ width: \"100px\" }}\n            transition={{ delay: 0.4, duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"h-1 bg-gradient-to-r from-primary via-secondary to-accent mx-auto rounded-full\"\n          />\n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.6, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-lg text-foreground/80 mt-6 max-w-2xl mx-auto\"\n          >\n            Explora nuestra amplia selección de muñecos tejidos con amor y dedicación\n          </motion.p>\n        </motion.div>\n\n        {/* Filtros de Categorías */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"flex flex-wrap justify-center gap-4 mb-12\"\n        >\n          {categories.map((category, index) => (\n            <motion.button\n              key={category}\n              custom={index}\n              variants={categoryVariants}\n              animate={selectedCategory === category ? 'active' : 'inactive'}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setSelectedCategory(category)}\n              className=\"px-6 py-3 rounded-full font-medium border-2 border-primary/20 transition-all duration-300 shadow-sm hover:shadow-md\"\n            >\n              {category}\n            </motion.button>\n          ))}\n        </motion.div>\n\n        {/* Contador de Productos */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ delay: 0.4, duration: 0.6 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-8\"\n        >\n          <span className=\"inline-flex items-center gap-2 px-4 py-2 bg-primary/10 rounded-full text-primary font-medium\">\n            <ShoppingBag className=\"h-4 w-4\" />\n            {filteredProducts.length} {filteredProducts.length === 1 ? 'producto' : 'productos'} disponible{filteredProducts.length !== 1 ? 's' : ''}\n          </span>\n        </motion.div>\n\n        {/* Grid de Productos */}\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={selectedCategory}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\"\n          >\n            {filteredProducts.map((product, index) => (\n              <motion.div\n                key={product.id}\n                custom={index}\n                variants={productVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                whileHover=\"hover\"\n                onHoverStart={() => setHoveredProduct(product.id)}\n                onHoverEnd={() => setHoveredProduct(null)}\n                className=\"group cursor-pointer\"\n              >\n                <div className=\"glass-effect rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 border border-white/20 h-full\">\n                  {/* Imagen del Producto */}\n                  <div className=\"relative aspect-square overflow-hidden\">\n                    <motion.img\n                      src={product.image}\n                      alt={product.name}\n                      className=\"w-full h-full object-cover\"\n                      whileHover={{ scale: 1.1 }}\n                      transition={{ duration: 0.3 }}\n                      loading=\"lazy\"\n                    />\n                    \n                    {/* Overlay de Gradiente */}\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                    \n                    {/* Badge de Categoría */}\n                    <motion.div\n                      initial={{ opacity: 0, scale: 0.8 }}\n                      animate={{ \n                        opacity: hoveredProduct === product.id ? 1 : 0.7,\n                        scale: 1 \n                      }}\n                      className=\"absolute top-3 left-3 px-3 py-1 bg-white/90 rounded-full text-xs font-medium text-foreground/80\"\n                    >\n                      {product.category}\n                    </motion.div>\n                  </div>\n\n                  {/* Información del Producto */}\n                  <div className=\"p-6\">\n                    <motion.h3\n                      layout\n                      className=\"font-display text-xl font-bold mb-2 text-foreground group-hover:text-primary transition-colors duration-300\"\n                    >\n                      {product.name}\n                    </motion.h3>\n                    \n                    <motion.p\n                      layout\n                      className=\"text-2xl font-bold text-accent-foreground mb-4\"\n                    >\n                      {product.price}\n                    </motion.p>\n\n                    {/* Botones de Acción */}\n                    <div className=\"space-y-3\">\n                      <motion.button\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => handleWhatsApp(product)}\n                        className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground font-semibold py-3 px-4 rounded-lg transition-all duration-300 flex items-center justify-center gap-2 shadow-md hover:shadow-lg\"\n                      >\n                        <MessageCircle className=\"h-4 w-4\" />\n                        Consultar por WhatsApp\n                      </motion.button>\n                      \n                      <motion.button\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => handleFlowPurchase(product)}\n                        className=\"w-full border-2 border-secondary text-secondary hover:bg-secondary hover:text-white font-semibold py-3 px-4 rounded-lg transition-all duration-300 flex items-center justify-center gap-2\"\n                      >\n                        <ShoppingBag className=\"h-4 w-4\" />\n                        Comprar ahora\n                      </motion.button>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </AnimatePresence>\n\n        {/* Mensaje si no hay productos */}\n        {filteredProducts.length === 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-center py-16\"\n          >\n            <div className=\"glass-effect rounded-2xl p-8 max-w-md mx-auto\">\n              <ShoppingBag className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-foreground mb-2\">\n                No hay productos en esta categoría\n              </h3>\n              <p className=\"text-muted-foreground\">\n                Pronto agregaremos más productos increíbles. ¡Mantente atento!\n              </p>\n            </div>\n          </motion.div>\n        )}\n\n        {/* Call to Action Final */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mt-16\"\n        >\n          <div className=\"glass-effect rounded-2xl p-8 max-w-2xl mx-auto\">\n            <h3 className=\"font-display text-2xl font-bold mb-4 text-gradient\">\n              ¿No encuentras lo que buscas?\n            </h3>\n            <p className=\"text-foreground/80 mb-6\">\n              ¡Contáctanos! Creamos amigurumis personalizados según tus ideas y personajes favoritos.\n            </p>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => {\n                const message = encodeURIComponent('¡Hola! Quisiera crear un amigurumi personalizado');\n                window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n              }}\n              className=\"bg-gradient-to-r from-primary via-secondary to-accent text-white font-semibold px-8 py-3 rounded-full shadow-lg hover:shadow-xl transition-all duration-300\"\n            >\n              Solicitar pedido personalizado\n            </motion.button>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default Catalog;"
  },
  {
    "path": "src/components/ErrorBoundary.tsx",
    "content": "import React from 'react';\n\nconst searilizeError = (error: any) => {\n  if (error instanceof Error) {\n    return error.message + '\\n' + error.stack;\n  }\n  return JSON.stringify(error, null, 2);\n};\n\nexport class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean; error: any }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { hasError: true, error };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-4 border border-red-500 rounded\">\n          <h2 className=\"text-red-500\">Something went wrong.</h2>\n          <pre className=\"mt-2 text-sm\">{searilizeError(this.state.error)}</pre>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}"
  },
  {
    "path": "src/components/Footer.tsx",
    "content": "import { motion } from 'framer-motion';\nimport { Heart, MapPin, MessageCircle, Phone, Clock, ArrowUp } from 'lucide-react';\n\ninterface FooterProps {\n  scrollToSection: (sectionId: string) => void;\n}\n\nconst Footer: React.FC<FooterProps> = ({ scrollToSection }) => {\n  const currentYear = new Date().getFullYear();\n\n  const handleWhatsApp = () => {\n    const message = encodeURIComponent('¡Hola! Me interesan tus amigurumis');\n    window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n  };\n\n  const handleCustomOrder = () => {\n    const message = encodeURIComponent('¡Hola! Quisiera encargar un amigurumi personalizado');\n    window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const quickLinks = [\n    { label: 'Inicio', id: 'inicio' },\n    { label: 'Tienda', id: 'tienda' },\n    { label: 'Nosotros', id: 'nosotros' },\n    { label: 'Contacto', id: 'contacto' },\n  ];\n\n  const productCategories = [\n    { label: 'Cine & TV', id: 'tienda' },\n    { label: 'Animatitos', id: 'tienda' },\n    { label: 'Anime & Videojuegos', id: 'tienda' },\n    { label: 'Pedidos Personalizados', action: handleCustomOrder },\n  ];\n\n  return (\n    <footer className=\"bg-gradient-to-b from-muted to-background relative overflow-hidden\">\n      {/* Elementos Decorativos */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <motion.div\n          animate={{ \n            rotate: [0, 360],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{ duration: 40, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute -top-20 -right-20 w-40 h-40 bg-primary/5 rounded-full blur-3xl\"\n        />\n        <motion.div\n          animate={{ \n            rotate: [360, 0],\n            scale: [1, 0.9, 1],\n          }}\n          transition={{ duration: 35, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute -bottom-20 -left-20 w-60 h-60 bg-secondary/5 rounded-full blur-3xl\"\n        />\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Contenido Principal del Footer */}\n        <div className=\"py-16\">\n          <div className=\"grid md:grid-cols-3 gap-12\">\n            \n            {/* Columna 1: Branding */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"space-y-6\"\n            >\n              {/* Logo */}\n              <motion.div\n                whileHover={{ scale: 1.05 }}\n                className=\"flex items-center space-x-3 cursor-pointer\"\n                onClick={scrollToTop}\n              >\n                <Heart className=\"h-10 w-10 text-primary animate-pulse\" />\n                <span className=\"font-display text-2xl font-bold text-gradient\">\n                  Gray Amigurumis\n                </span>\n              </motion.div>\n\n              {/* Descripción */}\n              <p className=\"text-foreground/80 leading-relaxed\">\n                Creamos muñecos de crochet únicos con amor y dedicación. \n                Cada pieza está tejida especialmente para transmitir ternura \n                y generar momentos especiales.\n              </p>\n\n              {/* Horarios */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2 text-sm text-foreground/70\">\n                  <Clock className=\"h-4 w-4 text-primary\" />\n                  <span>Lunes a Viernes: 9:00 - 18:00</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-sm text-foreground/70\">\n                  <Clock className=\"h-4 w-4 text-primary\" />\n                  <span>Sábados: 9:00 - 15:00</span>\n                </div>\n              </div>\n\n              {/* CTA Principal */}\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={handleWhatsApp}\n                className=\"bg-primary hover:bg-primary/90 text-primary-foreground font-semibold px-6 py-3 rounded-full transition-all duration-300 flex items-center gap-2 shadow-lg w-full justify-center\"\n              >\n                <MessageCircle className=\"h-4 w-4\" />\n                Chatear por WhatsApp\n              </motion.button>\n            </motion.div>\n\n            {/* Columna 2: Enlaces Rápidos */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2, duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"space-y-6\"\n            >\n              <h3 className=\"font-display text-xl font-bold text-foreground\">\n                Enlaces Rápidos\n              </h3>\n\n              <div className=\"space-y-3\">\n                {quickLinks.map((link, index) => (\n                  <motion.button\n                    key={link.id}\n                    whileHover={{ x: 5 }}\n                    onClick={() => scrollToSection(link.id)}\n                    className=\"block text-foreground/80 hover:text-primary transition-colors duration-300 text-left\"\n                  >\n                    {link.label}\n                  </motion.button>\n                ))}\n              </div>\n\n              <div className=\"pt-4\">\n                <h4 className=\"font-semibold text-foreground mb-3\">\n                  Categorías de Productos\n                </h4>\n                <div className=\"space-y-3\">\n                  {productCategories.map((category, index) => (\n                    <motion.button\n                      key={category.label}\n                      whileHover={{ x: 5 }}\n                      onClick={category.action || (() => scrollToSection(category.id!))}\n                      className=\"block text-foreground/80 hover:text-primary transition-colors duration-300 text-left\"\n                    >\n                      {category.label}\n                    </motion.button>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Columna 3: Ubicación y Contacto */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4, duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"space-y-6\"\n            >\n              <h3 className=\"font-display text-xl font-bold text-foreground\">\n                Ubicación y Contacto\n              </h3>\n\n              {/* Ubicación */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <MapPin className=\"h-5 w-5 text-primary mt-1 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium text-foreground\">\n                      Punta Arenas\n                    </p>\n                    <p className=\"text-foreground/70 text-sm\">\n                      Región de Magallanes, Chile\n                    </p>\n                  </div>\n                </div>\n\n                {/* WhatsApp */}\n                <div className=\"flex items-center gap-3\">\n                  <MessageCircle className=\"h-5 w-5 text-green-500\" />\n                  <div>\n                    <p className=\"font-medium text-foreground\">\n                      +56 9 9283 4268\n                    </p>\n                    <p className=\"text-foreground/70 text-sm\">\n                      Disponible para consultas\n                    </p>\n                  </div>\n                </div>\n\n                {/* Teléfono adicional si necesario */}\n                <div className=\"flex items-center gap-3\">\n                  <Phone className=\"h-5 w-5 text-secondary\" />\n                  <div>\n                    <p className=\"font-medium text-foreground\">\n                      Pedidos Personalizados\n                    </p>\n                    <p className=\"text-foreground/70 text-sm\">\n                      A través de WhatsApp\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Información adicional */}\n              <div className=\"glass-effect rounded-xl p-4\">\n                <h4 className=\"font-semibold text-primary mb-2\">\n                  Información Importante\n                </h4>\n                <ul className=\"space-y-2 text-sm text-foreground/80\">\n                  <li>• Tiempo de elaboración: 5-10 días</li>\n                  <li>• Envíos a todo Chile</li>\n                  <li>• Garantía de calidad</li>\n                  <li>• Diseños únicos personalizados</li>\n                </ul>\n              </div>\n\n              {/* Botón de pedido personalizado destacado */}\n              <motion.button\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={handleCustomOrder}\n                className=\"w-full bg-gradient-to-r from-secondary to-accent text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl\"\n              >\n                Pedidos Personalizados\n              </motion.button>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Separador */}\n        <div className=\"border-t border-primary/10\"></div>\n\n        {/* Copyright y Enlaces Legales */}\n        <div className=\"py-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n            {/* Copyright */}\n            <motion.p\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"text-foreground/70 text-sm text-center md:text-left\"\n            >\n              © {currentYear} Gray Amigurumis. Hecho con{' '}\n              <Heart className=\"h-3 w-3 text-primary inline mx-1\" />\n              en Punta Arenas, Chile.\n            </motion.p>\n\n            {/* Enlaces legales */}\n            <motion.div\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ delay: 0.2, duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"flex gap-6 text-sm\"\n            >\n              <button className=\"text-foreground/70 hover:text-primary transition-colors\">\n                Términos de Servicio\n              </button>\n              <button className=\"text-foreground/70 hover:text-primary transition-colors\">\n                Política de Privacidad\n              </button>\n            </motion.div>\n\n            {/* Botón Scroll to Top */}\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={scrollToTop}\n              className=\"bg-primary/10 hover:bg-primary/20 text-primary p-3 rounded-full transition-all duration-300\"\n              title=\"Volver arriba\"\n            >\n              <ArrowUp className=\"h-4 w-4\" />\n            </motion.button>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;"
  },
  {
    "path": "src/components/Header.tsx",
    "content": "import { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Menu, X, Heart } from 'lucide-react';\n\ninterface HeaderProps {\n  scrollToSection: (sectionId: string) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ scrollToSection }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const navItems = [\n    { id: 'inicio', label: 'Inicio' },\n    { id: 'tienda', label: 'Tienda' },\n    { id: 'nosotros', label: 'Nosotros' },\n    { id: 'contacto', label: 'Contacto' },\n  ];\n\n  const handleNavClick = (sectionId: string) => {\n    scrollToSection(sectionId);\n    setIsMenuOpen(false);\n  };\n\n  const handleWhatsApp = () => {\n    const message = encodeURIComponent('¡Hola! Me interesan tus amigurumis');\n    window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n  };\n\n  return (\n    <>\n      {/* Header Principal */}\n      <motion.header\n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        className=\"fixed top-0 left-0 right-0 z-50 glass-effect border-b border-white/20\"\n      >\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            {/* Logo */}\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              className=\"flex items-center space-x-2 cursor-pointer\"\n              onClick={() => handleNavClick('inicio')}\n            >\n              <Heart className=\"h-8 w-8 text-primary animate-pulse\" />\n              <span className=\"font-display text-2xl font-bold text-gradient\">\n                Gray Amigurumis\n              </span>\n            </motion.div>\n\n            {/* Navegación Desktop */}\n            <nav className=\"hidden md:flex space-x-8\">\n              {navItems.map((item) => (\n                <motion.button\n                  key={item.id}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => handleNavClick(item.id)}\n                  className=\"text-foreground font-medium hover:text-primary transition-colors relative group\"\n                >\n                  {item.label}\n                  <span className=\"absolute bottom-0 left-0 w-0 h-0.5 bg-primary transition-all group-hover:w-full\"></span>\n                </motion.button>\n              ))}\n            </nav>\n\n            {/* Botón menú móvil */}\n            <motion.button\n              whileTap={{ scale: 0.9 }}\n              className=\"md:hidden p-2\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n            >\n              {isMenuOpen ? (\n                <X className=\"h-6 w-6 text-foreground\" />\n              ) : (\n                <Menu className=\"h-6 w-6 text-foreground\" />\n              )}\n            </motion.button>\n          </div>\n        </div>\n      </motion.header>\n\n      {/* Menú Móvil */}\n      <AnimatePresence>\n        {isMenuOpen && (\n          <motion.div\n            initial={{ x: '100%' }}\n            animate={{ x: 0 }}\n            exit={{ x: '100%' }}\n            transition={{ type: 'spring', damping: 25, stiffness: 200 }}\n            className=\"fixed top-0 right-0 h-full w-80 glass-effect z-40 md:hidden\"\n          >\n            <div className=\"p-6 pt-20\">\n              <div className=\"flex justify-between items-center mb-8\">\n                <span className=\"font-display text-xl text-gradient\">Menú</span>\n                <button\n                  onClick={() => setIsMenuOpen(false)}\n                  className=\"p-2 hover:bg-white/10 rounded-full transition-colors\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              <nav className=\"space-y-4\">\n                {navItems.map((item, index) => (\n                  <motion.button\n                    key={item.id}\n                    initial={{ x: 50, opacity: 0 }}\n                    animate={{ x: 0, opacity: 1 }}\n                    transition={{ delay: index * 0.1 }}\n                    onClick={() => handleNavClick(item.id)}\n                    className=\"block w-full text-left py-3 px-4 rounded-lg hover:bg-primary/20 transition-colors font-medium\"\n                  >\n                    {item.label}\n                  </motion.button>\n                ))}\n              </nav>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Overlay para cerrar menú móvil */}\n      <AnimatePresence>\n        {isMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={() => setIsMenuOpen(false)}\n            className=\"fixed inset-0 bg-black/20 z-30 md:hidden\"\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Botón WhatsApp Flotante */}\n      <motion.button\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.9 }}\n        onClick={handleWhatsApp}\n        className=\"fixed bottom-6 right-6 z-50 w-14 h-14 bg-green-500 hover:bg-green-600 text-white rounded-full shadow-lg flex items-center justify-center animate-heartbeat\"\n      >\n        <svg className=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path d=\"M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z\"/>\n        </svg>\n      </motion.button>\n    </>\n  );\n};\n\nexport default Header;"
  },
  {
    "path": "src/components/Hero.tsx",
    "content": "import { motion } from 'framer-motion';\nimport { ArrowDown, Heart } from 'lucide-react';\n\ninterface HeroProps {\n  scrollToSection: (sectionId: string) => void;\n}\n\nconst Hero: React.FC<HeroProps> = ({ scrollToSection }) => {\n  const handleScrollToCatalog = () => {\n    scrollToSection('tienda');\n  };\n\n  return (\n    <section id=\"inicio\" className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      {/* Imagen de Fondo */}\n      <div \n        className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n        style={{\n          backgroundImage: `linear-gradient(rgba(255, 179, 186, 0.3), rgba(179, 217, 255, 0.3)), url('/imgs/hero-bg.png')`,\n        }}\n      />\n      \n      {/* Gradiente Superpuesto */}\n      <div className=\"absolute inset-0 gradient-pastel opacity-30\" />\n      \n      {/* Partículas Flotantes */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        {[...Array(6)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-primary/30 rounded-full\"\n            animate={{\n              y: [-20, -100],\n              x: [0, Math.random() * 100 - 50],\n              opacity: [0, 1, 0],\n            }}\n            transition={{\n              duration: 3 + i,\n              repeat: Infinity,\n              delay: i * 0.5,\n            }}\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: '100%',\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Contenido Principal */}\n      <div className=\"relative z-10 container mx-auto px-4 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"max-w-4xl mx-auto\"\n        >\n          {/* Panel Glassmorphism */}\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            transition={{ delay: 0.3, duration: 0.8 }}\n            className=\"glass-effect rounded-3xl p-8 md:p-12 backdrop-blur-md\"\n          >\n            {/* Logo/Icono Animado */}\n            <motion.div\n              animate={{ rotate: [0, 5, -5, 0] }}\n              transition={{ duration: 2, repeat: Infinity }}\n              className=\"flex justify-center mb-6\"\n            >\n              <Heart className=\"h-16 w-16 text-primary animate-pulse\" />\n            </motion.div>\n\n            {/* Título Principal */}\n            <motion.h1\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5, duration: 0.8 }}\n              className=\"font-display text-4xl md:text-6xl lg:text-7xl font-bold mb-6 text-gradient\"\n            >\n              Tejidos con\n              <br />\n              <span className=\"relative\">\n                Ternura\n                <motion.div\n                  className=\"absolute -inset-1 bg-accent/20 rounded-lg -z-10\"\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  transition={{ delay: 1, duration: 0.5 }}\n                />\n              </span>\n            </motion.h1>\n\n            {/* Subtítulo */}\n            <motion.p\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.7, duration: 0.8 }}\n              className=\"text-lg md:text-xl text-foreground/80 mb-8 max-w-2xl mx-auto leading-relaxed\"\n            >\n              Descubre nuestros hermosos muñecos de crochet hechos a mano con amor y dedicación. \n              Cada pieza es única, tejida con cuidado para darte momentos de dulzura y compañía.\n            </motion.p>\n\n            {/* CTA Buttons */}\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.9, duration: 0.8 }}\n              className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\"\n            >\n              <motion.button\n                whileHover={{ scale: 1.05, boxShadow: '0 10px 25px rgba(255, 179, 186, 0.3)' }}\n                whileTap={{ scale: 0.95 }}\n                onClick={handleScrollToCatalog}\n                className=\"bg-primary hover:bg-primary/90 text-primary-foreground font-semibold px-8 py-4 rounded-full transition-all duration-300 flex items-center gap-2 shadow-lg\"\n              >\n                Ver creaciones\n                <ArrowDown className=\"h-5 w-5\" />\n              </motion.button>\n              \n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => {\n                  const message = encodeURIComponent('¡Hola! Quisiera encargar un amigurumi personalizado');\n                  window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n                }}\n                className=\"border-2 border-secondary text-secondary hover:bg-secondary hover:text-white font-semibold px-8 py-4 rounded-full transition-all duration-300\"\n              >\n                Pedidos personalizados\n              </motion.button>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n\n        {/* Indicador de Scroll */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.5, duration: 0.8 }}\n          className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2\"\n        >\n          <motion.div\n            animate={{ y: [0, 10, 0] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n            className=\"w-6 h-10 border-2 border-white/50 rounded-full flex justify-center\"\n          >\n            <motion.div\n              animate={{ y: [0, 12, 0] }}\n              transition={{ duration: 1.5, repeat: Infinity }}\n              className=\"w-1 h-3 bg-white/70 rounded-full mt-2\"\n            />\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;"
  },
  {
    "path": "src/components/IdeaGenerator.tsx",
    "content": "import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { Sparkles, Send, Loader2, Copy, RefreshCw } from 'lucide-react';\n\nconst IdeaGenerator: React.FC = () => {\n  const [userIdea, setUserIdea] = useState('');\n  const [generatedDescription, setGeneratedDescription] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleGenerate = async () => {\n    if (!userIdea.trim()) {\n      setError('Por favor, describe tu idea antes de generar la descripción');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    setGeneratedDescription('');\n\n    try {\n      const apiKey = import.meta.env.VITE_GEMINI_API_KEY;\n      \n      if (!apiKey) {\n        throw new Error('API key de Gemini no configurada');\n      }\n\n      const genAI = new GoogleGenerativeAI(apiKey);\n      const model = genAI.getGenerativeModel({ model: 'gemini-2.0-flash-exp' });\n\n      const prompt = `Eres un asistente creativo para 'Gray Amigurumis', una tienda de muñecos de crochet hechos a mano. Un cliente quiere un pedido personalizado. Tu tarea es tomar su idea y expandirla en una descripción adorable, detallada y mágica para ayudarle a visualizar el producto final.\n\nIdeas del cliente: ${userIdea}\n\nCrea una descripción que incluya:\n- Una descripción emotiva y cálida del producto\n- Detalles sobre los materiales y colores sugeridos\n- El proceso artesanal que se seguirá\n- Por qué sería especial para quien lo reciba\n- Mantén un tono tierno y acogedor\n- No menciones precios\n- Máximo 150 palabras\n\nResponde solo con la descripción, sin preámbulos.`;\n\n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      const text = response.text();\n\n      setGeneratedDescription(text);\n    } catch (err) {\n      console.error('Error generando descripción:', err);\n      setError('Hubo un error generando la descripción. Por favor, intenta nuevamente.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(generatedDescription);\n      // Aquí podrías agregar una notificación de éxito\n    } catch (err) {\n      console.error('Error copiando texto:', err);\n    }\n  };\n\n  const handleWhatsApp = () => {\n    const message = encodeURIComponent(\n      `¡Hola! Me encantaría crear un amigurumi personalizado basado en esta idea: ${userIdea}\\n\\nDescripción: ${generatedDescription}`\n    );\n    window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n  };\n\n  const exampleIdeas = [\n    \"Un unicornio con cuerno dorado y crin rainbow\",\n    \"Personaje de Dragon Ball en versión tierna\",\n    \"Un panda bebé durmiendo con osito\",\n    \"Pokémon favoritos en estilo kawaii\"\n  ];\n\n  return (\n    <section className=\"py-20 bg-gradient-to-b from-background to-muted relative overflow-hidden\">\n      {/* Elementos Decorativos */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <motion.div\n          animate={{ \n            rotate: [0, 360],\n            x: [0, 50, 0],\n            y: [0, -30, 0],\n          }}\n          transition={{ duration: 25, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute top-10 left-10 w-24 h-24 bg-accent/10 rounded-full blur-2xl\"\n        />\n        <motion.div\n          animate={{ \n            rotate: [360, 0],\n            x: [0, -40, 0],\n            y: [0, 40, 0],\n          }}\n          transition={{ duration: 30, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute bottom-10 right-10 w-32 h-32 bg-primary/10 rounded-full blur-2xl\"\n        />\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Título de Sección */}\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <motion.div\n            initial={{ scale: 0 }}\n            whileInView={{ scale: 1 }}\n            transition={{ delay: 0.2, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-br from-accent to-secondary mb-6\"\n          >\n            <Sparkles className=\"h-8 w-8 text-white animate-pulse\" />\n          </motion.div>\n          \n          <motion.h2\n            initial={{ opacity: 0, scale: 0.9 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.4, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"font-display text-4xl md:text-5xl font-bold mb-6 text-gradient\"\n          >\n            Dale Vida a tu Idea\n          </motion.h2>\n          \n          <motion.div\n            initial={{ width: 0 }}\n            whileInView={{ width: \"100px\" }}\n            transition={{ delay: 0.6, duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"h-1 bg-gradient-to-r from-accent via-secondary to-primary mx-auto rounded-full\"\n          />\n          \n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.8, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-lg text-foreground/80 mt-6 max-w-2xl mx-auto\"\n          >\n            Describe tu idea y nosotros la convertiremos en una descripción adorable y detallada para tu muñeco perfecto\n          </motion.p>\n        </motion.div>\n\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Formulario de Entrada */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3, duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"glass-effect rounded-3xl p-8 mb-8\"\n          >\n            {/* Ideas de Ejemplo */}\n            <div className=\"mb-6\">\n              <h3 className=\"font-semibold text-foreground mb-3\">Ideas de ejemplo:</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {exampleIdeas.map((idea, index) => (\n                  <motion.button\n                    key={index}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => setUserIdea(idea)}\n                    className=\"px-3 py-1 text-sm bg-muted hover:bg-primary/20 rounded-full text-muted-foreground hover:text-primary transition-colors\"\n                  >\n                    {idea}\n                  </motion.button>\n                ))}\n              </div>\n            </div>\n\n            {/* Textarea */}\n            <div className=\"space-y-4\">\n              <label htmlFor=\"userIdea\" className=\"block text-sm font-medium text-foreground\">\n                Describe tu idea para el amigurumi personalizado:\n              </label>\n              <textarea\n                id=\"userIdea\"\n                value={userIdea}\n                onChange={(e) => setUserIdea(e.target.value)}\n                placeholder=\"Ejemplo: Un amigurumi de mi personaje favorito de anime, pero en versión tierna y con colores pastel...\"\n                className=\"w-full h-32 p-4 border border-primary/20 rounded-xl resize-none focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary transition-all duration-300 bg-background/50 backdrop-blur-sm\"\n                disabled={isLoading}\n              />\n              \n              {/* Error Message */}\n              {error && (\n                <motion.p\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"text-red-500 text-sm\"\n                >\n                  {error}\n                </motion.p>\n              )}\n\n              {/* Botón Generar */}\n              <motion.button\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={handleGenerate}\n                disabled={isLoading || !userIdea.trim()}\n                className=\"w-full bg-gradient-to-r from-accent to-secondary hover:from-accent/90 hover:to-secondary/90 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"h-5 w-5 animate-spin\" />\n                    Creando descripción mágica...\n                  </>\n                ) : (\n                  <>\n                    <Send className=\"h-5 w-5\" />\n                    Generar Descripción\n                  </>\n                )}\n              </motion.button>\n            </div>\n          </motion.div>\n\n          {/* Resultado */}\n          {generatedDescription && (\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              className=\"glass-effect rounded-3xl p-8\"\n            >\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"font-display text-2xl font-bold text-gradient\">\n                  Tu descripción mágica\n                </h3>\n                <div className=\"flex gap-2\">\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={handleCopy}\n                    className=\"p-2 bg-secondary/20 hover:bg-secondary/30 rounded-lg transition-colors\"\n                    title=\"Copiar descripción\"\n                  >\n                    <Copy className=\"h-4 w-4 text-secondary-foreground\" />\n                  </motion.button>\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => {\n                      setGeneratedDescription('');\n                      setUserIdea('');\n                    }}\n                    className=\"p-2 bg-primary/20 hover:bg-primary/30 rounded-lg transition-colors\"\n                    title=\"Limpiar\"\n                  >\n                    <RefreshCw className=\"h-4 w-4 text-primary-foreground\" />\n                  </motion.button>\n                </div>\n              </div>\n\n              <div className=\"bg-background/50 rounded-xl p-6 mb-6\">\n                <p className=\"text-foreground/90 leading-relaxed whitespace-pre-wrap\">\n                  {generatedDescription}\n                </p>\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={handleWhatsApp}\n                  className=\"flex-1 bg-primary hover:bg-primary/90 text-primary-foreground font-semibold py-3 px-6 rounded-xl transition-all duration-300 flex items-center justify-center gap-2 shadow-lg\"\n                >\n                  <Send className=\"h-4 w-4\" />\n                  Enviar por WhatsApp\n                </motion.button>\n                \n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => {\n                    const message = encodeURIComponent(`¡Hola! Me encanta esta idea: ${userIdea}`);\n                    window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n                  }}\n                  className=\"flex-1 border-2 border-secondary text-secondary hover:bg-secondary hover:text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 flex items-center justify-center gap-2\"\n                >\n                  Crear este diseño\n                </motion.button>\n              </div>\n            </motion.div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default IdeaGenerator;"
  },
  {
    "path": "src/components/Testimonials.tsx",
    "content": "import { motion } from 'framer-motion';\nimport { Star, Quote } from 'lucide-react';\n\nconst Testimonials: React.FC = () => {\n  const testimonials = [\n    {\n      id: 1,\n      text: \"¡Mi Deadpool tejido es simplemente perfecto! La calidad es de otro nivel, lleno de detalles que solo un verdadero fan notaría.\",\n      author: \"Carlos M.\",\n      rating: 5,\n      category: \"Cine & TV\"\n    },\n    {\n      id: 2,\n      text: \"Le regalé un personaje de anime a mi polola y le encantó. Se nota el cariño en cada puntada. ¡Excelente trabajo!\",\n      author: \"Valentina G.\",\n      rating: 5,\n      category: \"Anime & Videojuegos\"\n    },\n    {\n      id: 3,\n      text: \"Tengo varios de sus amigurumis y son todos preciosos. La atención es súper personalizada y amable. ¡Totalmente recomendado!\",\n      author: \"Francisco A.\",\n      rating: 5,\n      category: \"Animatitos\"\n    }\n  ];\n\n  const renderStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star\n        key={i}\n        className={`h-4 w-4 ${\n          i < rating ? 'text-accent fill-current' : 'text-muted-foreground'\n        }`}\n      />\n    ));\n  };\n\n  return (\n    <section className=\"py-20 bg-gradient-to-b from-muted to-background relative overflow-hidden\">\n      {/* Elementos Decorativos */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <motion.div\n          animate={{ \n            rotate: [0, 360],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{ duration: 35, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute top-20 left-20 w-40 h-40 bg-primary/5 rounded-full blur-3xl\"\n        />\n        <motion.div\n          animate={{ \n            rotate: [360, 0],\n            scale: [1, 0.8, 1],\n          }}\n          transition={{ duration: 40, repeat: Infinity, ease: \"linear\" }}\n          className=\"absolute bottom-20 right-20 w-32 h-32 bg-secondary/5 rounded-full blur-3xl\"\n        />\n        <motion.div\n          animate={{ \n            y: [0, -20, 0],\n            x: [0, 10, 0],\n          }}\n          transition={{ duration: 20, repeat: Infinity, ease: \"easeInOut\" }}\n          className=\"absolute top-1/2 left-1/4 w-24 h-24 bg-accent/5 rounded-full blur-2xl\"\n        />\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Título de Sección */}\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <motion.div\n            initial={{ scale: 0 }}\n            whileInView={{ scale: 1 }}\n            transition={{ delay: 0.2, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-br from-primary to-secondary mb-6\"\n          >\n            <Quote className=\"h-8 w-8 text-white\" />\n          </motion.div>\n          \n          <motion.h2\n            initial={{ opacity: 0, scale: 0.9 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.4, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"font-display text-4xl md:text-5xl font-bold mb-6 text-gradient\"\n          >\n            Lo que dicen los fans\n          </motion.h2>\n          \n          <motion.div\n            initial={{ width: 0 }}\n            whileInView={{ width: \"100px\" }}\n            transition={{ delay: 0.6, duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"h-1 bg-gradient-to-r from-primary via-secondary to-accent mx-auto rounded-full\"\n          />\n          \n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.8, duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-lg text-foreground/80 mt-6 max-w-2xl mx-auto\"\n          >\n            Descubre por qué nuestros clientes aman nuestros amigurumis y siguen confiando en nosotros\n          </motion.p>\n        </motion.div>\n\n        {/* Grid de Testimonios */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {testimonials.map((testimonial, index) => (\n            <motion.div\n              key={testimonial.id}\n              initial={{ opacity: 0, y: 50 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 * index, duration: 0.8 }}\n              viewport={{ once: true }}\n              whileHover={{ y: -10, scale: 1.02 }}\n              className=\"group h-full\"\n            >\n              <div className=\"glass-effect rounded-2xl p-8 h-full text-center hover:shadow-xl transition-all duration-300 border border-white/20 relative overflow-hidden\">\n                {/* Icono de Cita Decorativo */}\n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  whileInView={{ scale: 1, rotate: 0 }}\n                  transition={{ delay: 0.5 + (0.1 * index), duration: 0.8 }}\n                  viewport={{ once: true }}\n                  className=\"absolute -top-2 -right-2 w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\"\n                >\n                  <Quote className=\"h-6 w-6 text-primary/30\" />\n                </motion.div>\n\n                {/* Rating */}\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  whileInView={{ opacity: 1 }}\n                  transition={{ delay: 0.3 + (0.1 * index), duration: 0.6 }}\n                  viewport={{ once: true }}\n                  className=\"flex justify-center gap-1 mb-4\"\n                >\n                  {renderStars(testimonial.rating)}\n                </motion.div>\n\n                {/* Categoría Badge */}\n                <motion.div\n                  initial={{ scale: 0 }}\n                  whileInView={{ scale: 1 }}\n                  transition={{ delay: 0.4 + (0.1 * index), duration: 0.6 }}\n                  viewport={{ once: true }}\n                  className=\"inline-flex items-center px-3 py-1 bg-secondary/20 rounded-full text-xs font-medium text-secondary-foreground mb-4\"\n                >\n                  {testimonial.category}\n                </motion.div>\n\n                {/* Testimonio */}\n                <motion.blockquote\n                  initial={{ opacity: 0 }}\n                  whileInView={{ opacity: 1 }}\n                  transition={{ delay: 0.5 + (0.1 * index), duration: 0.8 }}\n                  viewport={{ once: true }}\n                  className=\"text-foreground/90 leading-relaxed mb-6 italic relative\"\n                >\n                  <span className=\"text-4xl text-primary/30 absolute -top-2 -left-2\">\"</span>\n                  <span className=\"relative z-10\">{testimonial.text}</span>\n                  <span className=\"text-4xl text-primary/30 absolute -bottom-4 -right-2\">\"</span>\n                </motion.blockquote>\n\n                {/* Autor */}\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.6 + (0.1 * index), duration: 0.6 }}\n                  viewport={{ once: true }}\n                  className=\"pt-4 border-t border-primary/10\"\n                >\n                  <p className=\"font-semibold text-primary-foreground\">\n                    {testimonial.author}\n                  </p>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    Cliente verificado\n                  </p>\n                </motion.div>\n\n                {/* Efecto Hover */}\n                <motion.div\n                  initial={{ scale: 0, opacity: 0 }}\n                  whileHover={{ scale: 1, opacity: 1 }}\n                  className=\"absolute inset-0 bg-gradient-to-br from-primary/5 to-secondary/5 rounded-2xl pointer-events-none\"\n                />\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Estadísticas */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.8, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"mt-16 grid grid-cols-2 md:grid-cols-4 gap-8 text-center\"\n        >\n          {[\n            { number: \"100+\", label: \"Amigurumis creados\" },\n            { number: \"50+\", label: \"Clientes felices\" },\n            { number: \"5\", label: \"Estrellas promedio\" },\n            { number: \"24h\", label: \"Tiempo de respuesta\" }\n          ].map((stat, index) => (\n            <motion.div\n              key={stat.label}\n              initial={{ scale: 0 }}\n              whileInView={{ scale: 1 }}\n              transition={{ delay: 1 + (0.1 * index), duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"glass-effect rounded-xl p-6\"\n            >\n              <motion.h3\n                initial={{ opacity: 0 }}\n                whileInView={{ opacity: 1 }}\n                transition={{ delay: 1.2 + (0.1 * index), duration: 0.6 }}\n                viewport={{ once: true }}\n                className=\"font-display text-2xl md:text-3xl font-bold text-gradient mb-2\"\n              >\n                {stat.number}\n              </motion.h3>\n              <p className=\"text-foreground/80 text-sm\">\n                {stat.label}\n              </p>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Call to Action */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ delay: 1.2, duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"text-center mt-16\"\n        >\n          <div className=\"glass-effect rounded-2xl p-8 max-w-2xl mx-auto\">\n            <h3 className=\"font-display text-2xl font-bold mb-4 text-gradient\">\n              ¿Quieres ser el próximo en评价?\n            </h3>\n            <p className=\"text-foreground/80 mb-6\">\n              Únete a nuestros clientes satisfechos y crea tu propio amigurumi perfecto\n            </p>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => {\n                const message = encodeURIComponent('¡Hola! Me encantaría crear un amigurumi único');\n                window.open(`https://wa.me/56992834268?text=${message}`, '_blank');\n              }}\n              className=\"bg-gradient-to-r from-primary via-secondary to-accent text-white font-semibold px-8 py-3 rounded-full shadow-lg hover:shadow-xl transition-all duration-300\"\n            >\n              Comenzar mi pedido ahora\n            </motion.button>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonials;"
  },
  {
    "path": "src/hooks/use-mobile.tsx",
    "content": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"
  },
  {
    "path": "src/lib/utils.ts",
    "content": "import { clsx, ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"
  }
]