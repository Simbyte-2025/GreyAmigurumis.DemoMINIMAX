[
  {
    "path": ".env",
    "content": "# Google Gemini API Key\nVITE_GEMINI_API_KEY=AIzaSyDoLt3GSiuTfpkl9ogcE6u68WlngQb5p3U"
  },
  {
    "path": ".env.example",
    "content": "# Google Gemini API Key\nVITE_GEMINI_API_KEY=tu_api_key_de_gemini_aqui"
  },
  {
    "path": ".gitignore",
    "content": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\nlerna-debug.log*\n\nnode_modules\ndist\ndist-ssr\n*.local\n\n# Editor directories and files\n.vscode/*\n!.vscode/extensions.json\n.idea\n.DS_Store\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n"
  },
  {
    "path": "README.md",
    "content": "# React + TypeScript + Vite\n\nThis template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.\n\nCurrently, two official plugins are available:\n\n- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh\n- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh\n\n## Expanding the ESLint configuration\n\nIf you are developing a production application, we recommend updating the configuration to enable type aware lint rules:\n\n- Configure the top-level `parserOptions` property like this:\n\n```js\nexport default tseslint.config({\n  languageOptions: {\n    // other options...\n    parserOptions: {\n      project: ['./tsconfig.node.json', './tsconfig.app.json'],\n      tsconfigRootDir: import.meta.dirname,\n    },\n  },\n})\n```\n\n- Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`\n- Optionally add `...tseslint.configs.stylisticTypeChecked`\n- Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:\n\n```js\n// eslint.config.js\nimport react from 'eslint-plugin-react'\n\nexport default tseslint.config({\n  // Set the react version\n  settings: { react: { version: '18.3' } },\n  plugins: {\n    // Add the react plugin\n    react,\n  },\n  rules: {\n    // other rules...\n    // Enable its recommended rules\n    ...react.configs.recommended.rules,\n    ...react.configs['jsx-runtime'].rules,\n  },\n})\n```\n"
  },
  {
    "path": "package.json",
    "content": "{\n  \"name\": \"react_repo\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"pnpm install --prefer-offline && vite\",\n    \"build\": \"pnpm install --prefer-offline && rm -rf node_modules/.vite-temp && tsc -b && vite build\",\n    \"build:prod\": \"pnpm install --prefer-offline && rm -rf node_modules/.vite-temp && tsc -b && BUILD_MODE=prod vite build\",\n    \"lint\": \"pnpm install --prefer-offline && eslint .\",\n    \"preview\": \"pnpm install --prefer-offline && vite preview\",\n    \"install-deps\": \"pnpm install --prefer-offline\",\n    \"clean\": \"rm -rf node_modules .pnpm-store pnpm-lock.yaml && pnpm store prune\"\n  },\n  \"dependencies\": {\n    \"@google/generative-ai\": \"^0.24.1\",\n    \"@hookform/resolvers\": \"^3.10.0\",\n    \"@radix-ui/react-accordion\": \"^1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.1\",\n    \"@radix-ui/react-avatar\": \"^1.1.2\",\n    \"@radix-ui/react-checkbox\": \"^1.1.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.2\",\n    \"@radix-ui/react-context-menu\": \"^2.2.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.4\",\n    \"@radix-ui/react-hover-card\": \"^1.1.4\",\n    \"@radix-ui/react-label\": \"^2.1.1\",\n    \"@radix-ui/react-menubar\": \"^1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.3\",\n    \"@radix-ui/react-popover\": \"^1.1.4\",\n    \"@radix-ui/react-progress\": \"^1.1.1\",\n    \"@radix-ui/react-radio-group\": \"^1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.2\",\n    \"@radix-ui/react-select\": \"^2.1.4\",\n    \"@radix-ui/react-separator\": \"^1.1.1\",\n    \"@radix-ui/react-slider\": \"^1.2.2\",\n    \"@radix-ui/react-slot\": \"^1.1.1\",\n    \"@radix-ui/react-switch\": \"^1.1.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.2\",\n    \"@radix-ui/react-toast\": \"^1.2.4\",\n    \"@radix-ui/react-toggle\": \"^1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.1\",\n    \"@radix-ui/react-tooltip\": \"^1.1.6\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.0\",\n    \"date-fns\": \"^3.0.0\",\n    \"embla-carousel-react\": \"^8.5.2\",\n    \"framer-motion\": \"^12.23.24\",\n    \"input-otp\": \"^1.4.2\",\n    \"lucide-react\": \"^0.364.0\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^18.3.1\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-hook-form\": \"^7.54.2\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"react-router-dom\": \"^6\",\n    \"recharts\": \"^2.12.4\",\n    \"sonner\": \"^1.7.2\",\n    \"tailwind-merge\": \"^2.6.0\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^1.1.2\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"@eslint/js\": \"^9.15.0\",\n    \"@types/node\": \"^22.10.7\",\n    \"@types/react\": \"^18.3.12\",\n    \"@types/react-dom\": \"^18.3.1\",\n    \"@types/react-router-dom\": \"^5\",\n    \"@vitejs/plugin-react\": \"^4.3.4\",\n    \"autoprefixer\": \"10.4.20\",\n    \"eslint\": \"^9.15.0\",\n    \"eslint-plugin-react-hooks\": \"^5.0.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.14\",\n    \"globals\": \"^15.12.0\",\n    \"postcss\": \"8.4.49\",\n    \"tailwindcss\": \"v3.4.16\",\n    \"typescript\": \"~5.6.2\",\n    \"typescript-eslint\": \"^8.15.0\",\n    \"vite\": \"^6.0.1\",\n    \"vite-plugin-source-identifier\": \"1.1.2\"\n  }\n}"
  },
  {
    "path": "tailwind.config.js",
    "content": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n\tdarkMode: ['class'],\n\tcontent: [\n\t\t'./pages/**/*.{ts,tsx}',\n\t\t'./components/**/*.{ts,tsx}',\n\t\t'./app/**/*.{ts,tsx}',\n\t\t'./src/**/*.{ts,tsx}',\n\t],\n\ttheme: {\n\t\tcontainer: {\n\t\t\tcenter: true,\n\t\t\tpadding: '2rem',\n\t\t\tscreens: {\n\t\t\t\t'2xl': '1400px',\n\t\t\t},\n\t\t},\n\t\textend: {\n\t\t\tfontFamily: {\n\t\t\t\tsans: ['Quicksand', 'sans-serif'],\n\t\t\t\tdisplay: ['Pacifico', 'cursive'],\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tborder: 'hsl(var(--border))',\n\t\t\t\tinput: 'hsl(var(--input))',\n\t\t\t\tring: 'hsl(var(--ring))',\n\t\t\t\tbackground: 'hsl(var(--background))',\n\t\t\t\tforeground: 'hsl(var(--foreground))',\n\t\t\t\t// Paleta \"Pastel Dreams\"\n\t\t\t\tprimary: {\n\t\t\t\t\tDEFAULT: '#FFB3BA', // Rosa pastel\n\t\t\t\t\tforeground: '#8B5A73', // Marrón para texto\n\t\t\t\t},\n\t\t\t\tsecondary: {\n\t\t\t\t\tDEFAULT: '#B3D9FF', // Celeste suave\n\t\t\t\t\tforeground: '#4A6FA5', // Marrón para texto\n\t\t\t\t},\n\t\t\t\taccent: {\n\t\t\t\t\tDEFAULT: '#FFE5B3', // Amarillo suave\n\t\t\t\t\tforeground: '#CCAA6B', // Marrón para texto\n\t\t\t\t},\n\t\t\t\tmuted: {\n\t\t\t\t\tDEFAULT: '#FFF8F0', // Crema cálido\n\t\t\t\t\tforeground: '#8B5A73', // Marrón para texto\n\t\t\t\t},\n\t\t\t\tcard: {\n\t\t\t\t\tDEFAULT: '#FFFFFF',\n\t\t\t\t\tforeground: '#8B5A73',\n\t\t\t\t},\n\t\t\t\tdestructive: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n\t\t\t\t\tforeground: 'hsl(var(--destructive-foreground))',\n\t\t\t\t},\n\t\t\t\tpopover: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\t\t\tforeground: 'hsl(var(--popover-foreground))',\n\t\t\t\t},\n\t\t\t},\n\t\t\tborderRadius: {\n\t\t\t\tlg: 'var(--radius)',\n\t\t\t\tmd: 'calc(var(--radius) - 2px)',\n\t\t\t\tsm: 'calc(var(--radius) - 4px)',\n\t\t\t},\n\t\t\tkeyframes: {\n\t\t\t\t'accordion-down': {\n\t\t\t\t\tfrom: { height: 0 },\n\t\t\t\t\tto: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t},\n\t\t\t\t'accordion-up': {\n\t\t\t\t\tfrom: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t\tto: { height: 0 },\n\t\t\t\t},\n\t\t\t\t'heartbeat': {\n\t\t\t\t\t'0%, 100%': { transform: 'scale(1)' },\n\t\t\t\t\t'50%': { transform: 'scale(1.1)' },\n\t\t\t\t},\n\t\t\t\t'float': {\n\t\t\t\t\t'0%, 100%': { transform: 'translateY(0px)' },\n\t\t\t\t\t'50%': { transform: 'translateY(-10px)' },\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n\t\t\t\t'accordion-up': 'accordion-up 0.2s ease-out',\n\t\t\t\t'heartbeat': 'heartbeat 2s ease-in-out infinite',\n\t\t\t\t'float': 'float 3s ease-in-out infinite',\n\t\t\t},\n\t\t},\n\t},\n\tplugins: [require('tailwindcss-animate')],\n}"
  },
  {
    "path": "tsconfig.app.json",
    "content": "{\n  \"compilerOptions\": {\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.app.tsbuildinfo\",\n    \"target\": \"ES2020\",\n    \"useDefineForClassFields\": true,\n    \"lib\": [\n      \"ES2020\",\n      \"DOM\",\n      \"DOM.Iterable\"\n    ],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n    /* Tailwind stuff */\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\n        \"./src/*\"\n      ]\n    },\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"isolatedModules\": true,\n    \"moduleDetection\": \"force\",\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n    /* Linting */\n    \"strict\": false,\n    \"noImplicitAny\": false,\n    \"noUnusedLocals\": false,\n    \"noUnusedParameters\": false,\n    \"noFallthroughCasesInSwitch\": false,\n    \"noUncheckedIndexedAccess\": false,\n    \"noImplicitReturns\": false,\n    \"noImplicitThis\": false,\n    \"noPropertyAccessFromIndexSignature\": false,\n    \"noUncheckedSideEffectImports\": false\n  },\n  \"include\": [\n    \"src\"\n  ]\n}"
  },
  {
    "path": "tsconfig.json",
    "content": "{\n  \"files\": [],\n  \"references\": [\n    {\n      \"path\": \"./tsconfig.app.json\"\n    },\n    {\n      \"path\": \"./tsconfig.node.json\"\n    }\n  ],\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  }\n}\n\n"
  },
  {
    "path": "tsconfig.node.json",
    "content": "{\n  \"compilerOptions\": {\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.node.tsbuildinfo\",\n    \"target\": \"ES2022\",\n    \"lib\": [\"ES2023\"],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"isolatedModules\": true,\n    \"moduleDetection\": \"force\",\n    \"noEmit\": true,\n\n    /* Linting */\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noUncheckedSideEffectImports\": true\n  },\n  \"include\": [\"vite.config.ts\"]\n}\n"
  },
  {
    "path": "vite.config.ts",
    "content": "import path from \"path\"\nimport react from \"@vitejs/plugin-react\"\nimport { defineConfig } from \"vite\"\nimport sourceIdentifierPlugin from 'vite-plugin-source-identifier'\n\nconst isProd = process.env.BUILD_MODE === 'prod'\nexport default defineConfig({\n  plugins: [\n    react(), \n    sourceIdentifierPlugin({\n      enabled: !isProd,\n      attributePrefix: 'data-matrix',\n      includeProps: true,\n    })\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"./src\"),\n    },\n  },\n})\n\n"
  }
]