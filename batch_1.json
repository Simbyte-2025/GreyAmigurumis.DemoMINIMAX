[
  {
    "path": "src/App.css",
    "content": "/* Estilos específicos para Gray Amigurumis */\n\n/* Mejoras de rendimiento */\n* {\n  box-sizing: border-box;\n}\n\n#root {\n  margin: 0;\n  min-height: 100vh;\n}\n\n/* Smooth scrolling mejorado */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Utilidades personalizadas */\n.glass-effect {\n  backdrop-filter: blur(16px);\n  -webkit-backdrop-filter: blur(16px);\n}\n\n/* Mejoras de accesibilidad */\n@media (prefers-reduced-motion: reduce) {\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/* Optimización de imágenes */\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Mejoras de focus para accesibilidad */\nbutton:focus-visible,\na:focus-visible,\ninput:focus-visible,\ntextarea:focus-visible {\n  outline: 2px solid hsl(var(--primary));\n  outline-offset: 2px;\n}\n\n/* Carga de fuentes optimizada */\n@media (prefers-reduced-data: reduce) {\n  .font-display,\n  .font-sans {\n    font-family: system-ui, -apple-system, sans-serif;\n  }\n}"
  },
  {
    "path": "src/App.tsx",
    "content": "import React, { useRef, useEffect } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport About from './components/About';\nimport Catalog from './components/Catalog';\nimport IdeaGenerator from './components/IdeaGenerator';\nimport Testimonials from './components/Testimonials';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  const sectionsRef = useRef<{ [key: string]: HTMLElement | null }>({});\n\n  // Función para hacer scroll suave a una sección específica\n  const scrollToSection = (sectionId: string) => {\n    const section = sectionsRef.current[sectionId];\n    if (section) {\n      const headerOffset = 80; // Altura del header fijo\n      const elementPosition = section.offsetTop;\n      const offsetPosition = elementPosition - headerOffset;\n\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Observer para detectar las secciones que están en vista\n  useEffect(() => {\n    const observerOptions = {\n      root: null,\n      rootMargin: '-50% 0px -50% 0px',\n      threshold: 0\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          // Aquí podrías agregar lógica para actualizar la navegación activa\n          console.log('Vista activa:', entry.target.id);\n        }\n      });\n    }, observerOptions);\n\n    // Observar todas las secciones\n    Object.values(sectionsRef.current).forEach((section) => {\n      if (section) {\n        observer.observe(section);\n      }\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  // Configurar las referencias de las secciones\n  const setSectionRef = (sectionId: string) => (el: HTMLElement | null) => {\n    sectionsRef.current[sectionId] = el;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <Header scrollToSection={scrollToSection} />\n\n      {/* Contenido Principal */}\n      <ErrorBoundary>\n        <main>\n          {/* Hero Section */}\n          <div ref={setSectionRef('inicio')}>\n            <Hero scrollToSection={scrollToSection} />\n          </div>\n\n          {/* About Section */}\n          <div ref={setSectionRef('nosotros')}>\n            <About />\n          </div>\n\n          {/* Catalog Section */}\n          <div ref={setSectionRef('tienda')}>\n            <Catalog />\n          </div>\n\n          {/* Idea Generator Section */}\n          <section id=\"generador\">\n            <IdeaGenerator />\n          </section>\n\n          {/* Testimonials Section */}\n          <section id=\"testimonios\">\n            <Testimonials />\n          </section>\n        </main>\n\n        {/* Footer */}\n        <div ref={setSectionRef('contacto')}>\n          <Footer scrollToSection={scrollToSection} />\n        </div>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\n// Componente Error Boundary simple\nclass ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean; error?: Error }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Error capturado por Error Boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"fixed inset-0 bg-background flex items-center justify-center z-50\">\n          <div className=\"glass-effect rounded-2xl p-8 max-w-md mx-4 text-center\">\n            <h2 className=\"font-display text-2xl font-bold text-primary mb-4\">\n              ¡Ups! Algo salió mal\n            </h2>\n            <p className=\"text-foreground/80 mb-6\">\n              Ha ocurrido un error inesperado. Por favor, recarga la página.\n            </p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"bg-primary hover:bg-primary/90 text-primary-foreground font-semibold px-6 py-3 rounded-lg transition-colors\"\n            >\n              Recargar página\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default App;"
  },
  {
    "path": "src/index.css",
    "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --radius: 0.5rem;\n    \n    /* Paleta \"Pastel Dreams\" - variables CSS */\n    --background: 35 30% 98%; /* Crema cálido */\n    --foreground: 348 25% 40%; /* Marrón principal */\n    \n    --primary: 354 100% 85%; /* Rosa pastel */\n    --primary-foreground: 348 25% 40%;\n    \n    --secondary: 210 100% 85%; /* Celeste suave */\n    --secondary-foreground: 210 50% 35%;\n    \n    --accent: 45 100% 85%; /* Amarillo suave */\n    --accent-foreground: 45 30% 45%;\n    \n    --muted: 35 30% 98%; /* Crema cálido */\n    --muted-foreground: 348 25% 60%;\n    \n    --card: 0 0% 100%;\n    --card-foreground: 348 25% 40%;\n    \n    --popover: 0 0% 100%;\n    --popover-foreground: 348 25% 40%;\n    \n    --border: 348 20% 90%;\n    --input: 348 20% 90%;\n    --ring: 354 100% 85%;\n    \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 20% 98%;\n  }\n\n  * {\n    border-color: hsl(var(--border));\n  }\n\n  body {\n    background-color: hsl(var(--background));\n    color: hsl(var(--foreground));\n    font-family: 'Quicksand', sans-serif;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer components {\n  .glass-effect {\n    @apply backdrop-blur-md bg-white/80 border border-white/20 shadow-lg;\n  }\n  \n  .gradient-pastel {\n    background: linear-gradient(135deg, #FFB3BA 0%, #B3D9FF 50%, #FFE5B3 100%);\n  }\n  \n  .text-gradient {\n    @apply bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent;\n  }\n}\n\n\n\nimg {\n  object-position: top;\n}\n\n.fixed {\n  position: fixed;\n}"
  },
  {
    "path": "src/main.tsx",
    "content": "import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { ErrorBoundary } from './components/ErrorBoundary.tsx'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </StrictMode>,\n)\n"
  },
  {
    "path": "src/vite-env.d.ts",
    "content": "/// <reference types=\"vite/client\" />\n"
  }
]